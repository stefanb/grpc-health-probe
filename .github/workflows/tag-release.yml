name: Tag patch release

on:
  push:
    # branches:
    #   - master  # Adjust to match the name of your main branch
    # paths-ignore:
    #   - .github/**
    #   - README.md
    #   - LICENSE

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important to fetch all tags and history
          fetch-tags: true # Fetch all tags to ensure we can create a new one

      - run: git tag --list --sort=creatordate
      - run: git tag --list --sort=version:refname
      - run: git rev-list --tags --max-count=1
      - run: git describe --tags
      - run: git describe --tags `git rev-list --tags --max-count=1`
      - run: git log

      # Determine the new version number
      - name: Get latest tag and increment
        id: versioning
        run: |
          # Get the highest tag number, and add 1 to the patch
          TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Current highest tag is $TAG"

          # Increment the patch version
          NEW_TAG="${TAG%.*}.$((${TAG##*.}+1))"
          echo "New tag will be $NEW_TAG"

          # Set NEW_TAG as an output variable
          echo "NEW_VERSION=$NEW_TAG" >> $GITHUB_ENV

      - name: Create a new release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
            echo "Creating new release ${{ env.NEW_VERSION }}"
            gh release create ${{ env.NEW_VERSION }} \
              --title "${{ env.NEW_VERSION }}" \
              --repo ${{ github.repository }} \
              --target ${{ github.sha }}

            echo "Created new release ${{ env.NEW_VERSION }}"

